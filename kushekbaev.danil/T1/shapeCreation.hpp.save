#ifndef SHAPECREATION_HPP
#define SHAPECREATION_HPP

#include <iostream>
#include "shape.hpp"
#ifndef SHAPEMANIPULATIONS_HPP
#define SHAPEMANIPULATIONS_HPP

#include <iostream>
#include "base-types.hpp"
#include "shape.hpp"

namespace kushekbaev
{
  double getTotalArea(Shape** capacity, const size_t shapeCounter);
  void scaleTotal(Shape** capacity, const size_t shapeCounter, point_t scalePoint, double scaleCoeff);
  void outputCoord(Shape** capacity, const size_t shapeCounter, std::ostream& output);
  void clearMemory(Shape** capacity, size_t shapeCounter);
}

#endif

namespace kushekbaev
{
  Rectangle* makeRectangle(std::istream& input);
  Concave* makeConcave(std::istream& input);
  Parallelogram* makeParallelogram(std::istream& input);
  Diamond* makeDiamond(std::istream& input);
  void createShape(std::istream& input, Shape** capacity, size_t& shapeCounter, point_t& scalePoint, double& scaleCoeff);
}

#endif
